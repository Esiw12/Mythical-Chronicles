import React, { useEffect, useState } from "react";
import axios from "axios";
import Modal from "react-modal";
import "./App.css";

// JSON-—Å–µ—Ä–≤–µ—Ä
const API_URL = "http://localhost:3001/seminars";

Modal.setAppElement("#root");

function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏—è
  const [seminars, setSeminars] = useState([]); // –î–∞–Ω–Ω—ã–µ —Å–µ–º–∏–Ω–∞—Ä–æ–≤
  const [selectedSeminar, setSelectedSeminar] = useState(null); // –í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–µ–º–∏–Ω–∞—Ä –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [modalIsOpen, setModalIsOpen] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [confirmDelete, setConfirmDelete] = useState(null); // ID —Å–µ–º–∏–Ω–∞—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
  const [loading, setLoading] = useState(true); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [error, setError] = useState(null); // –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–µ–º–∏–Ω–∞—Ä–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    setLoading(true);
    axios.get(API_URL)
      .then(response => {
        setSeminars(response.data);
        setLoading(false);
      })
      .catch(error => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error);
        setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
        setLoading(false);
      });
  }, []);

  //  –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const openEditModal = (seminar) => {
    setSelectedSeminar(seminar);
    setModalIsOpen(true);
  };

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const closeModal = () => {
    setModalIsOpen(false);
    setSelectedSeminar(null);
  };

  //  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ–º–∏–Ω–∞—Ä–∞
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setSelectedSeminar(prev => ({ ...prev, [name]: value }));
  };

  //  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–µ–º–∏–Ω–∞—Ä–∞
  const saveChanges = () => {
    if (!selectedSeminar) return;

    axios.put(`${API_URL}/${selectedSeminar.id}`, selectedSeminar)
      .then(() => {
        setSeminars(seminars.map(s => s.id === selectedSeminar.id ? selectedSeminar : s));
        closeModal();
      })
      .catch(error => {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", error);
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π");
      });
  };

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ–º–∏–Ω–∞—Ä–∞
  const confirmDeleteSeminar = (id) => {
    setConfirmDelete(id);
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ–º–∏–Ω–∞—Ä–∞
  const deleteSeminar = () => {
    axios.delete(`${API_URL}/${confirmDelete}`)
      .then(() => {
        setSeminars(seminars.filter(s => s.id !== confirmDelete));
        setConfirmDelete(null);
      })
      .catch(error => {
        console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error);
        setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–µ–º–∏–Ω–∞—Ä–∞");
      });
  };

  return (
    <div className="container">
      <h1>üìÖ –°–µ–º–∏–Ω–∞—Ä—ã</h1>

      {/*–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–æ–∫ */}
      {loading && <p className="loading">–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
      {error && <p className="error">{error}</p>}

      {/*–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ–º–∏–Ω–∞—Ä–æ–≤ */}
      <div className="seminar-list">
        {seminars.map(seminar => (
          <div key={seminar.id} className="seminar-card">
            <img src={seminar.photo} alt={seminar.title} />
            <h2>{seminar.title}</h2>
            <p>{seminar.description}</p>
            <p><strong>–î–∞—Ç–∞:</strong> {seminar.date} | <strong>–í—Ä–µ–º—è:</strong> {seminar.time}</p>
            <button className="edit-btn" onClick={() => openEditModal(seminar)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
            <button className="delete-btn" onClick={() => confirmDeleteSeminar(seminar.id)}>üóë –£–¥–∞–ª–∏—Ç—å</button>
          </div>
        ))}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {modalIsOpen && selectedSeminar && (
        <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className="modal">
          <h2>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ–º–∏–Ω–∞—Ä–∞</h2>
          <input type="text" name="title" value={selectedSeminar.title} onChange={handleInputChange} placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" />
          <textarea name="description" value={selectedSeminar.description} onChange={handleInputChange} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" />
          <input type="date" name="date" value={selectedSeminar.date} onChange={handleInputChange} />
          <input type="time" name="time" value={selectedSeminar.time} onChange={handleInputChange} />
          <button className="save-btn" onClick={saveChanges}>üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
          <button className="cancel-btn" onClick={closeModal}>‚ùå –û—Ç–º–µ–Ω–∞</button>
        </Modal>
      )}

      {/*–û–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
      {confirmDelete !== null && (
  <div className="confirm-modal-overlay">
    <div className="confirm-modal">
      <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å–µ–º–∏–Ω–∞—Ä?</p>
      <div className="confirm-modal-buttons">
        <button className="confirm-btn" onClick={deleteSeminar}>‚úÖ –î–∞</button>
        <button className="cancel-btn" onClick={() => setConfirmDelete(null)}>‚ùå –ù–µ—Ç</button>
      </div>
    </div>
  </div>
)}
    </div>
  );
}

export default App;
